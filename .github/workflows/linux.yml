name: Linux
on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version to set in tarballs'
        required: false
        default: '0.0.0-edge'
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'Version to set in tarballs'
        required: false
        default: '0.0.0-edge'

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  Linux_x86-64:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Log environment
        run: |
          env

      - name: Install additional tools
        run: >-
          sudo apt install
          dos2unix
          gettext

      # When pyinstaller collects libraries, it seems to ignore libraries that
      # are not found on the host. Example: Qt depends on
      # libxkbcommon-x11.so.0 which is not bundled unless explicitly installed
      # first So we install some dependencies here.

      - name: Install library dependencies
        run: >-
          sudo apt install
          libxcb-glx0
          libxcb-icccm4
          libxcb-image0
          libxcb-keysyms1
          libxcb-randr0
          libxcb-render0
          libxcb-render-util0
          libxcb-shape0
          libxcb-shm0
          libxcb-sync1
          libxcb-util1
          libxcb-xfixes0
          libxcb-xinerama0
          libxcb-xkb1
          libxkbcommon-x11-0
          libglib2.0-0
          libjpeg-dev

      - name: Debug list libraries
        run: |
          ls /usr/lib/x86_64-linux-gnu

      - name: Set up Python 3.12
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12

      - name: Install pip and pipenv
        run: |
          python -m pip install pipenv pyinstaller

      - name: Run pipenv sync --dev
        run: |
          pipenv sync --dev

      - name: Set base version
        run: |
          echo "BASEVERSION_FS=${{ inputs.version }}" > BASEVERSION.FS
        if: ${{ inputs.version }}

      - name: Update version
        run: |
          fsbuild/version

      - name: Bootstrap
        if: hashFiles('fsbuild/bootstrap') != ''
        run: |
          fsbuild/bootstrap

      - name: Configure
        if: hashFiles('fsbuild/configure') != ''
        run: |
          fsbuild/configure

      - name: Build
        run: |
          pipenv run fsbuild/build

      - name: Bundle
        run: |
          fsbuild/bundle

      - name: Archive
        run: |
          fsbuild/archive

      - name: Upload builds to artifact storage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: Linux_x86-64-${{ inputs.version }}
          path: fsbuild/_dist/*
        if: github.event_name != 'pull_request'
