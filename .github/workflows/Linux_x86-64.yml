name: Linux_x86-64

on:
  push:
    branches:
      - beta
      - master
      - stable
      - test
  pull_request:
    branches:
      - beta
      - master
      - stable
      - test

jobs:
  Linux_x86-64:
    runs-on: ubuntu-22.04

    env:
      UPLOAD_ENABLED: ${{ secrets.DROPBOX_REFRESH_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Log environment
      #   run: |
      #     env

      - name: Install packages
        run: >-
          sudo apt install
          dos2unix
          gettext

      # When pyinstaller collects libraries, it seems to ignore libraries that
      # are not found on the host. Example: Qt depends on
      # libxkbcommon-x11.so.0 which is not bundled unless explicitly installed
      # first So we install some dependencies here.

      # - name: Install library dependencies
      #   run: >-
      #     sudo apt install
      #     libxcb-glx0
      #     libxcb-icccm4
      #     libxcb-image0
      #     libxcb-keysyms1
      #     libxcb-randr0
      #     libxcb-render0
      #     libxcb-render-util0
      #     libxcb-shape0
      #     libxcb-shm0
      #     libxcb-sync1
      #     libxcb-util1
      #     libxcb-xfixes0
      #     libxcb-xinerama0
      #     libxcb-xkb1
      #     libxkbcommon-x11-0

      # - name: Debug list libraries
      #   run: |
      #     ls /usr/lib/x86_64-linux-gnu

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.9"

      - name: Set up Python
        run: |
          uv python install

      # - name: Set up Python 3.12
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: 3.12

      # - name: Install pip and pipenv
      #   run: |
      #     python -m pip install pip==21.3.1 pipenv==2021.5.29

      - name: Run uv sync
        run: |
          uv sync

      # - name: Download pyinstaller source
      #   run: |
      #     wget https://github.com/pyinstaller/pyinstaller/releases/download/v4.2/PyInstaller-4.2.tar.gz
      #     echo "f5c0eeb2aa663cce9a5404292c0195011fa500a6501c873a466b2e8cad3c950c *PyInstaller-4.2.tar.gz" > SHA256SUMS
      #     shasum -c SHA256SUMS
      #     tar xf PyInstaller-4.2.tar.gz

      # - name: Compile new bootloader for pyinstaller
      #   run: |
      #     cd pyinstaller-4.2/bootloader
      #     CC="gcc -no-pie" ./waf all

      # - name: Replace pyinstaller with custom version
      #   run: |
      #     pipenv uninstall pyinstaller
      #     pipenv install `pwd`/pyinstaller-4.2

      - name: Update version
        run: |
          fsbuild/version

      - name: Bootstrap
        if: hashFiles('fsbuild/bootstrap') != ''
        run: |
          fsbuild/bootstrap

      - name: Configure
        if: hashFiles('fsbuild/configure') != ''
        run: |
          fsbuild/configure

      - name: Build
        run: |
          uv run fsbuild/build

      - name: Bundle
        run: |
          fsbuild/bundle

      - name: Archive
        run: |
          fsbuild/archive

      - uses: actions/upload-artifact@v4
        with:
          name: Linux_x86-64
          path: fsbuild/_dist/*

      - name: Upload build to Dropbox folder
        if: >-
          env.UPLOAD_ENABLED != null && (
            github.ref == 'refs/heads/beta' ||
            github.ref == 'refs/heads/dev' ||
            github.ref == 'refs/heads/master' ||
            github.ref == 'refs/heads/stable' ||
            github.ref == 'refs/heads/test'
          )
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
        run: |
          uv add dropbox==12.0.2
          uv run python fsbuild/upload
