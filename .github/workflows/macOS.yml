name: macOS

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        default: macos-13
      artifact-name:
        required: true
        type: string
        default: macos

jobs:
  macOS:
    runs-on: ${{ inputs.runner }}

    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
      DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
      DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
      KEYCHAIN_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.MACOS_CERTIFICATE_P12_DATA }}
      SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}

    steps:
      - name: Prepare signing certificate
        if: env.SIGNING_CERTIFICATE_P12_DATA != null
        run: |
          echo $SIGNING_CERTIFICATE_P12_DATA | base64 --decode > certificate.p12
          security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
          security set-keychain-settings -t 7200 build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
          security import certificate.p12 -k build.keychain -P $SIGNING_CERTIFICATE_PASSWORD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD build.keychain

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.9"

      - name: Set up Python
        run: uv python install

      - name: Run uv sync
        run: uv sync

      - name: Build
        run: uv run python -m build all

      - uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.artifact-name }}-${{ github.ref_name }}-${{ github.run_id }}"
          path: build/_dist/*

      - name: Upload to Dropbox
        if: >-
          env.DROPBOX_REFRESH_TOKEN != null && (
            github.ref == 'refs/heads/beta' ||
            github.ref == 'refs/heads/dev' ||
            github.ref == 'refs/heads/main' ||
            github.ref == 'refs/heads/master' ||
            github.ref == 'refs/heads/stable' ||
            github.ref == 'refs/heads/test'
          )
        run: |
          uv run python -m build upload
